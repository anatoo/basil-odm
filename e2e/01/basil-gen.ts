/**
 * This file was generated by Basil ODM
 * Do not make changes to this file directly
 */
/* eslint-disable */
import * as $$mongodb from 'mongodb';
import * as $$basil from '../../src';

export class BlogEntry extends $$basil.Base {
  constructor(params?: Partial<BlogEntry>) {
    super();
    Object.assign(this, params);
  }
  static getRuntimeSchema(): $$basil.RuntimeCollectionSchema<BlogEntry, { user: User }> {
    return {
      collectionName: 'blogEntries',
      fields: new $$basil.FieldsSchema({
        kind: 'object',
        props: {
          _id: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'objectId',
            },
          },
          title: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'string',
            },
          },
          content: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'string',
            },
          },
          createdAt: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'date',
            },
          },
          userId: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'objectId',
            },
          },
        },
        allowAdditionalProps: false,
      }),
      indexes: [
        {
          fields: {
            createdAt: -1,
          },
          options: {},
        },
      ],
      options: {},
      edges: {
        user: {
          type: 'hasOne' as const,
          entity: User,
          referenceField: 'userId',
        },
      },
    };
  }
  _id: $$mongodb.ObjectId = new $$mongodb.ObjectId();
  title: string = '';
  content: string = '';
  createdAt: Date = new Date();
  userId: $$mongodb.ObjectId = new $$mongodb.ObjectId();
}

export class User extends $$basil.Base {
  constructor(params?: Partial<User>) {
    super();
    Object.assign(this, params);
  }
  static getRuntimeSchema(): $$basil.RuntimeCollectionSchema<User, {}> {
    return {
      collectionName: 'users',
      fields: new $$basil.FieldsSchema({
        kind: 'object',
        props: {
          _id: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'objectId',
            },
          },
          name: {
            kind: 'field',
            isOptional: false,
            node: {
              kind: 'string',
            },
          },
        },
        allowAdditionalProps: false,
      }),
      indexes: [],
      options: {},
      edges: {},
    };
  }
  _id: $$mongodb.ObjectId = new $$mongodb.ObjectId();
  name: string = '';
}
